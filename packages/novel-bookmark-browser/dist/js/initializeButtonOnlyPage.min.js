var u="element-p-",d="data-novel-bookmark-id",g="data-novel-bookmark-intersecting";function T({wrapperClass:e}){let o=O({wrapperClass:e});return o?()=>o.disconnect():null}function O({wrapperClass:e}){let o=document.getElementsByClassName(e);if(o.length===0)return null;let n=o[0].children;for(let r=0;r<n.length;r++){let i=`${u}${r}`,s=n[r];s instanceof HTMLElement&&(s.dataset.novelBookmarkId=i)}let a=new IntersectionObserver(r=>{for(let i of r){let s=i.target;!(s instanceof HTMLElement)||!s.dataset.novelBookmarkId||(s.dataset.novelBookmarkIntersecting=i.isIntersecting.toString())}});for(let r of n)a.observe(r);return a}var B="novel-bookmark-p-id";function x({type:e,key:o}){return e==="local"?localStorage.getItem(o):sessionStorage.getItem(o)}function D({type:e,key:o}){return e==="local"?localStorage.removeItem(o):sessionStorage.removeItem(o)}function y(){let e=x({type:"session",key:B});return D({type:"session",key:B}),e}function _(){let e=y();if(!e)return;let o=document.querySelector(`[${d}="${e}"]`);o&&o.scrollIntoView({behavior:"smooth"})}var M="novel-bookmarks";var c="novel-bookmarks-store",p;async function N(){return new Promise((e,o)=>{let t=indexedDB.open(M,1);t.onsuccess=function(){p=this.result,e(p)},t.onerror=n=>{o(n)},t.onupgradeneeded=n=>{let a=n.target;if(!a||!("result"in a)){console.error("openDatabase: event.target is invalid",a),o(n);return}let r=a.result;if(!(r instanceof IDBDatabase)){console.error("openDatabase: event.target.result is invalid",r),o(n);return}r.createObjectStore(c,{keyPath:"url"})}})}async function R(){return p||N()}async function f(e){return(await R()).transaction([c],e)}async function b(e){let o=await f("readwrite");return new Promise((t,n)=>{let a=o.objectStore(c).add(e);o.oncomplete=()=>{t()},a.onerror=r=>{n(r)}})}async function E(e){let o=await f("readwrite");return new Promise((t,n)=>{let a=o.objectStore(c).delete(e);o.oncomplete=()=>{t()},a.onerror=r=>{n(r)}})}async function S(e,o){let t=await f("readonly");return new Promise((n,a)=>{let r=t.objectStore(c).get(e);r.onsuccess=i=>{let s=i.target;if(!s||!("result"in s)){console.error("getFromDatabase: event.target is invalid",s),a(i);return}let l=s.result;o(l)||l==null?n(l):(console.error("getFromDatabase: event.target.result is invalid",l),a(i))},r.onerror=i=>{a(i)}})}function k(e){return typeof e!="object"||e===null?!1:"title"in e&&typeof e.title=="string"&&"url"in e&&typeof e.url=="string"}async function m(e){return!!await S(e,k)}async function I(){if(await m(window.location.href))return;let o=Array.from(document.querySelectorAll(`[${g}="true"]`)).map(t=>t instanceof HTMLElement?Number.parseInt(t.dataset.novelBookmarkId?.replace("element-p-","")??"0"):0);await b({title:document.title,url:window.location.href,id:o.length>0?`${u}${Math.min(...o)}`:void 0}).catch(t=>{console.error("addToDatabase error",t)})}async function v(e){await m(e)&&await E(e)}var L="novel-bookmark__container",A="novel-bookmark__button";function P(){let e=T({wrapperClass:L});e&&(_(),window.addEventListener("beforeunload",()=>e(),!1))}async function w({element:e}){let o=await m(window.location.href);return e.dataset.bookmarked=o?"true":"false",e}async function h({onClick:e}){let o=document.getElementsByClassName(A);if(o.length===0)throw new Error("novel-bookmark__button is not found");let t=o[0];if(!(t instanceof HTMLElement))throw new Error("novel-bookmark__button is not HTMLElement");return await w({element:t}),t.addEventListener("click",()=>{m(window.location.href).then(n=>{n?v(window.location.href).then(()=>{t.dataset.bookmarked="false",e?.()}):I().then(()=>{t.dataset.bookmarked="true",e?.()})})}),t}P();h({});
